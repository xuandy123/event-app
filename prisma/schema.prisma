// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  password      String
  emailVerified DateTime?
  image         String?
  sessions      Session[]
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

enum SubscriberStatus {
  ACTIVE
  SUSPENDED
  CANCELED
}

model Subscriber {
  id              String           @id @default(cuid())
  phone           BigInt           @unique
  phoneVerified   Boolean          @default(false)
  firstName       String?
  lastName        String?  
  email           String?          @unique
  status          SubscriberStatus @default(ACTIVE)
  metadata        SubscriberMetadata?
}

enum Sources {
  Instagram
  X
  TikTok
  Friend
  Google
  Newsletter
  Facebook
  Reddit
  Other
}

model SubscriberMetadata {
  id                       String   @id @default(cuid())
  age                      Int?
  preferences              Json?
  neighbourhood            String?
  feedback                 String?
  referral                 Sources?
  subscriberId             String   @unique
  subscriber               Subscriber     @relation(fields: [subscriberId], references: [id])
}

model Events {
  id               String   @id @default(cuid())
  name             String
  info             String
  headerImage      String[]
  startTime        DateTime
  endTime          DateTime
  where            String
  price            String
  instagram        String?
  tiktok           String?
  facebook         String?
  details          String
  expect           Json
  featured         Boolean @default(false)
  venue            String?
}